Firmware acts as the central point in controlling various IoT devices.

Attackers analyze the firmware of the target IoT devices to uncover the underlying loopholes and vulnerabilities. 

Attackers perform firmware analysis to identify the passwords, API tokens and endpoints, vulnerable services running, backdoor accounts, configuration files in use, private keys, stored data, etc


▪ Obtain Firmware
After gaining access to the target IoT device, extract the firmware from the device

▪ Analyze Firmware 
Run the following commands to analyze the firmware:
o Run “file” command on the “*.bin” file 

o Verify the MD5 signature 
• Run the “cat” command on the *.md5 file 
• Run the “md5sum” command on the *.bin file

o Run “strings” against the *.bin file 
• For example, strings -n 10 xyz.bin > strings.out less strings.out

o Run “hexdump” against the *.bin file 
• For example, hexdump -C -n 512 xyz.bin > hexdump.out cat hexdump.out

• Running hexdump can help identify the type of firmware build


▪ Extract the Filesystem
o Run binwalk for analyzing, reverse-engineering, and extracting data from the firmware image 
• For example, binwalk xyz.bin
• binwalk will identify the type of file system in use

o Extract the filesystem using “dd” 
• For example,
dd if=xyz.bin bs=1 skip=922460 count=2522318 of=xyz.squashfs


▪ Mount the Filesystem o Create a mount directory For example, mkdir rootfs
o sudo mount -t ext2 {filename} rootfs


▪ Analyze the Filesystem Content
o Check the following files and folders once the filesystem is mounted: 
• etc/passwd, etc/shadow, etc/ssl

• grep -rnw '/path/to/somewhere/' -e “pattern” such as password, admin, and root.
• find . -name '*.conf' and other file types such as *.pem, *.crt, *.cfg, .sh, and .bin.
• You can also run the Firmwalker script to search for these items in the extracted filesystem


▪ Emulate Firmware for Dynamic Testing
Perform dynamic testing of the web interface of the device using emulation software such as QEMU or Firmware Analysis Toolkit.
o Identifying the CPU architecture: Use commands such as file or readelf to determine the CPU architecture


o User-mode emulation: Listed below are user-mode emulation commands: 
• qemu-mipsel -L <prefix> <binary> 
• qemu-arm -L <prefix> <binary> 
• qemu-<arch> -L <prefix> <binary> 

Another option to use QEMU is to execute a cross-architecture chroot. 

Transfer qemu-<arch>-static binary to the firmware root file-system folder /usr/bin/ using the following command:
• chroot ~/<filename> /bin/






